import { Module, OnModuleInit } from '@nestjs/common';
import { APP_GUARD } from '@nestjs/core';
import { EventEmitterModule } from '@nestjs/event-emitter';
import { ThrottlerModule, ThrottlerGuard } from '@nestjs/throttler';
// Socket.IO –Ω–∞–ª–∞—à—Ç–æ–≤—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —á–µ—Ä–µ–∑ @WebSocketGateway
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { PrismaModule } from './prisma/prisma.module';
import { UsersModule } from './users/users.module';
import { GroupsModule } from './groups/groups.module';
import { ProfilesModule } from './profiles/profiles.module';
import { TTModule } from './talkytimes/tt.module';
import { ChatsModule } from './chats/chats.module';
import { BackupModule } from './backup/backup.module';
import { GalleryModule } from './gallery/gallery.module';
import { AuthModule } from './auth/auth.module';
import { JwtAuthGuard } from './auth/jwt.guard';
import { RolesGuard } from './common/auth/roles.guard';
import { EncryptionValidatorService } from './profiles/encryption-validator.service';
import { HttpModule } from './common/http/http.module';
import { EncryptionModule } from './common/encryption/encryption.module';
import { ShiftsModule } from './shifts/shifts.module';
import { TalkyTimesRTMService } from './providers/talkytimes/rtm.service';

@Module({
	imports: [
		EventEmitterModule.forRoot(),
		// Rate limiting –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
		ThrottlerModule.forRoot([
			{
				name: 'short',
				ttl: 1000, // 1 —Å–µ–∫—É–Ω–¥–∞
				limit: 10, // 10 –∑–∞–ø–∏—Ç—ñ–≤ –∑–∞ —Å–µ–∫—É–Ω–¥—É
			},
			{
				name: 'medium',
				ttl: 60000, // 1 —Ö–≤–∏–ª–∏–Ω–∞
				limit: 100, // 100 –∑–∞–ø–∏—Ç—ñ–≤ –∑–∞ —Ö–≤–∏–ª–∏–Ω—É
			},
			{
				name: 'long',
				ttl: 3600000, // 1 –≥–æ–¥–∏–Ω–∞
				limit: 1000, // 1000 –∑–∞–ø–∏—Ç—ñ–≤ –∑–∞ –≥–æ–¥–∏–Ω—É
			}
		]),
		HttpModule,
		EncryptionModule,
		PrismaModule, 
		UsersModule, 
		GroupsModule, 
		ProfilesModule, 
		TTModule, 
		ChatsModule, 
		BackupModule, 
		GalleryModule,
		AuthModule,
		ShiftsModule,
	],
	controllers: [AppController],
	providers: [
		AppService,
		EncryptionValidatorService,
		// Rate limiting guard (–≥–ª–æ–±–∞–ª—å–Ω–∏–π)
		{ provide: APP_GUARD, useClass: ThrottlerGuard },
		// –¢–∏–º—á–∞—Å–æ–≤–æ –≤—ñ–¥–∫–ª—é—á–∏–ª–∏ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
		// { provide: APP_GUARD, useClass: JwtAuthGuard },
		// { provide: APP_GUARD, useClass: RolesGuard },
	],
})
export class AppModule implements OnModuleInit {
	constructor(private readonly encryptionValidator: EncryptionValidatorService) {}

	async onModuleInit() {
		try {
			// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ –≤–∏–ø—Ä–∞–≤–ª—è—î–º–æ —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
			await this.encryptionValidator.validateAndFixProfiles();
			// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ RTM —Å–µ—Ä–≤—ñ—Å –¥–ª—è –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é
			try {
				const rtm = (this as any).rtmService as TalkyTimesRTMService | undefined;
				if (rtm) {
					(global as any).rtmServiceInstance = rtm;
				}
			} catch {}
		} catch (error) {
			console.error('üí• –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è:', error);
			// –ù–µ –∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –¥–∞–ª—ñ, —â–æ–± –¥–æ–¥–∞—Ç–æ–∫ –º—ñ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç–∏—Å—å
		}
	}
}
